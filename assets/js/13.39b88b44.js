(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{379:function(a,t,e){"use strict";e.r(t);var s=e(47),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"what-is-strimzi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-strimzi"}},[a._v("#")]),a._v(" What is Strimzi?")]),a._v(" "),e("h3",{attrs:{id:"operator-pattern-in-kubernetes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#operator-pattern-in-kubernetes"}},[a._v("#")]),a._v(" Operator pattern in Kubernetes")]),a._v(" "),e("blockquote",[e("p",[a._v("Extract from https://kubernetes.io/docs/concepts/extend-kubernetes/operator/")])]),a._v(" "),e("p",[a._v("Kubernetes is designed for automation. Out of the box, you get lots of built-in automation from the core of Kubernetes. You can use Kubernetes to automate deploying and running workloads, and you can automate how Kubernetes does that "),e("code",[a._v("using Operators")]),a._v(".")]),a._v(" "),e("p",[a._v("Kubernetes controllers concept lets you extend the clusterâ€™s behaviour without modifying the code of Kubernetes itself. Operators are clients of the Kubernetes API that act as controllers for a Custom Resource.")]),a._v(" "),e("h3",{attrs:{id:"strimzi-kafka-operator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strimzi-kafka-operator"}},[a._v("#")]),a._v(" Strimzi Kafka Operator")]),a._v(" "),e("blockquote",[e("p",[a._v("Extract from https://strimzi.io/docs/operators/master/overview.html")])]),a._v(" "),e("p",[a._v("Strimzi provides container images and Operators for running Kafka on Kubernetes."),e("br"),a._v("\nOperators simplify the process of:")]),a._v(" "),e("ul",[e("li",[a._v("Deploying and running Kafka clusters")]),a._v(" "),e("li",[a._v("Deploying and running Kafka components")]),a._v(" "),e("li",[a._v("Configuring access to Kafka")]),a._v(" "),e("li",[a._v("Securing access to Kafka")]),a._v(" "),e("li",[a._v("Upgrading Kafka")]),a._v(" "),e("li",[a._v("Managing brokers")]),a._v(" "),e("li",[a._v("Creating and managing topics")]),a._v(" "),e("li",[a._v("Creating and managing users")])]),a._v(" "),e("h2",{attrs:{id:"what-is-k3s-the-official-definition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-k3s-the-official-definition"}},[a._v("#")]),a._v(" What is k3s (the official definition)")]),a._v(" "),e("p",[e("code",[a._v("k3s")]),a._v(" is a fully compliant Kubernetes distribution with the following changes:")]),a._v(" "),e("ol",[e("li",[a._v("Packaged as a single binary.")]),a._v(" "),e("li",[a._v("Lightweight storage backend based on sqlite3 as the default storage mechanism. etcd3, MySQL, Postgres also still available.")]),a._v(" "),e("li",[a._v("Wrapped in simple launcher that handles a lot of the complexity of TLS and options.")]),a._v(" "),e("li",[a._v("Secure by default with reasonable defaults for lightweight environments.")]),a._v(" "),e("li",[a._v("Minimal to no OS dependencies (just a sane kernel and cgroup mounts needed). k3s packages required\ndependencies\n"),e("ul",[e("li",[a._v("containerd")]),a._v(" "),e("li",[a._v("Flannel")]),a._v(" "),e("li",[a._v("CoreDNS")]),a._v(" "),e("li",[a._v("CNI")]),a._v(" "),e("li",[a._v("Host utilities (iptables, socat, etc)")]),a._v(" "),e("li",[a._v("Ingress controller (traefik)")]),a._v(" "),e("li",[a._v("Embedded service loadbalancer")]),a._v(" "),e("li",[a._v("Embedded network policy controller")])])])]),a._v(" "),e("h3",{attrs:{id:"what-is-k3d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-k3d"}},[a._v("#")]),a._v(" What is k3d?")]),a._v(" "),e("p",[e("code",[a._v("k3d")]),a._v(" is a "),e("code",[a._v("Go")]),a._v(" binary file that run "),e("code",[a._v("k3s")]),a._v(" in docker. A very simple installation way and no modification in your system just one docker container that contain the Kubernetes cluster.")]),a._v(" "),e("h2",{attrs:{id:"requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[a._v("#")]),a._v(" Requirements")]),a._v(" "),e("ul",[e("li",[a._v("docker")]),a._v(" "),e("li",[a._v("kubectl")])]),a._v(" "),e("h2",{attrs:{id:"deploy-kafka-into-k3d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-kafka-into-k3d"}},[a._v("#")]),a._v(" Deploy Kafka into k3d")]),a._v(" "),e("h3",{attrs:{id:"install-k3d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-k3d"}},[a._v("#")]),a._v(" Install k3d")]),a._v(" "),e("p",[a._v("The installation script "),e("code",[a._v("install.sh")]),a._v(" will run the following steps")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("initArch "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# discovers the architecture for this system")]),a._v("\ninitOS "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# discovers the operating system for this system")]),a._v("\nverifySupported "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# checks that the os/arch combination is supported for binary builds")]),a._v("\ncheckTagProvided "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" checkLatestVersion\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" checkK3dInstalledVersion"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n  downloadFile "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# downloads the latest binary package and also the checksum")]),a._v("\n  installFile "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# make the Go binary file executable and mv it to /usr/local/bin/.")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${K3D_INSTALL_DIR"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v('"'),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("usr"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("local"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v('bin"}')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),e("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("installFile")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Preparing to install '),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_NAME")]),a._v(" into "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${K3D_INSTALL_DIR}")]),a._v('"')]),a._v("\n  runAsRoot "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$K3D_TMP_FILE")]),a._v('"')]),a._v("\n  runAsRoot "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$K3D_TMP_FILE")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$K3D_INSTALL_DIR")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_NAME")]),a._v('"')]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_NAME")]),a._v(" installed into "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$K3D_INSTALL_DIR")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$APP_NAME")]),a._v('"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("p",[a._v("To install "),e("code",[a._v("k3d")]),a._v(" run the following command")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -s https://raw.githubusercontent.com/rancher/k3d/v1.7.0/install.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),e("h2",{attrs:{id:"create-a-kubernetes-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-kubernetes-cluster"}},[a._v("#")]),a._v(" Create a Kubernetes cluster")]),a._v(" "),e("p",[a._v("Run this command to create the Kubernetes cluster")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ k3d create --name mykube\nINFO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0000"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" Created cluster network with ID ca3f27c73582ea01d220103908d5a316bbb2dfdfa53bf6c16821d30a0877e1c4 \nINFO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0000"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" Created docker volume  k3d-mykube-images        \nINFO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0000"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" Creating cluster "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("mykube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("                       \nINFO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0000"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" Creating server using docker.io/rancher/k3s:v1.17.3-k3s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". \nINFO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0001"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" SUCCESS: created cluster "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("mykube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("               \nINFO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0001"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" You can now use the cluster with:\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("KUBECONFIG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("k3d get-kubeconfig --name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'mykube'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\nkubectl cluster-info\n")])])]),e("p",[a._v("As requested above run this command to configure kubectl to be able to access to the Kubernetes cluster and run "),e("code",[a._v("kubectl cluster-info")]),a._v(" to test.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("KUBECONFIG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("k3d get-kubeconfig --name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'mykube'")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n$ kubectl cluster-info\nKubernetes master is running at https://localhost:6443\nCoreDNS is running at https://localhost:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\nMetrics-server is running at https://localhost:6443/api/v1/namespaces/kube-system/services/https:metrics-server:/proxy\n")])])]),e("p",[a._v("You should have a docker new running container containing the "),e("code",[a._v("k3s")]),a._v(" cluster")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ docker "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\nCONTAINER ID        IMAGE                      COMMAND                  CREATED             STATUS              PORTS                    NAMES\n4a672054b66c        rancher/k3s:v1.17.3-k3s1   "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/k3s server --hâ€¦"')]),a._v("   About an hour ago   Up About an hour    "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),a._v(".0.0:6443-"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6443")]),a._v("/tcp   k3d-mykube-server\n")])])]),e("h2",{attrs:{id:"deploy-strimzi-kafka-operator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-strimzi-kafka-operator"}},[a._v("#")]),a._v(" Deploy Strimzi Kafka operator")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" k8s\n")])])]),e("h3",{attrs:{id:"create-the-kafka-namespace-manifest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-the-kafka-namespace-manifest"}},[a._v("#")]),a._v(" Create the kafka namespace manifest")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" k8s/01_namespace.yml \n")])])]),e("p",[a._v("Edit the "),e("code",[a._v("k8s/01_namespace.yml")]),a._v(" file and paste the following content")]),a._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Namespace\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kafka\n")])])]),e("h3",{attrs:{id:"create-the-strimzi-kafka-operator-namespace-manifest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-the-strimzi-kafka-operator-namespace-manifest"}},[a._v("#")]),a._v(" Create the strimzi kafka operator namespace manifest")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" https://strimzi.io/install/latest?namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("kafka -o k8s/02_strimzi_kafka_operator.yml\n")])])]),e("h3",{attrs:{id:"create-the-kafka-namespace-manifest-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-the-kafka-namespace-manifest-2"}},[a._v("#")]),a._v(" Create the kafka namespace manifest")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" https://strimzi.io/examples/latest/kafka/kafka-persistent-single.yaml -o 03_kafka-persistent-single.yml\n")])])]),e("h3",{attrs:{id:"deploy-into-kubernetes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-into-kubernetes"}},[a._v("#")]),a._v(" Deploy into Kubernetes")]),a._v(" "),e("p",[a._v("Run the following command to deploy created manifests.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl apply --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("kafka -R -f k8s\nnamespace/kafka created\ncustomresourcedefinition.apiextensions.k8s.io/kafkas.kafka.strimzi.io created\nrolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator-entity-operator-delegation created\nclusterrolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator created\nrolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator-topic-operator-delegation created\ncustomresourcedefinition.apiextensions.k8s.io/kafkausers.kafka.strimzi.io created\ncustomresourcedefinition.apiextensions.k8s.io/kafkamirrormaker2s.kafka.strimzi.io created\nclusterrole.rbac.authorization.k8s.io/strimzi-entity-operator created\nclusterrole.rbac.authorization.k8s.io/strimzi-cluster-operator-global created\nclusterrolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator-kafka-broker-delegation created\nrolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator created\nclusterrole.rbac.authorization.k8s.io/strimzi-cluster-operator-namespaced created\nclusterrole.rbac.authorization.k8s.io/strimzi-topic-operator created\nserviceaccount/strimzi-cluster-operator created\nclusterrole.rbac.authorization.k8s.io/strimzi-kafka-broker created\ncustomresourcedefinition.apiextensions.k8s.io/kafkatopics.kafka.strimzi.io created\ncustomresourcedefinition.apiextensions.k8s.io/kafkabridges.kafka.strimzi.io created\ndeployment.apps/strimzi-cluster-operator created\ncustomresourcedefinition.apiextensions.k8s.io/kafkaconnectors.kafka.strimzi.io created\ncustomresourcedefinition.apiextensions.k8s.io/kafkaconnects2is.kafka.strimzi.io created\ncustomresourcedefinition.apiextensions.k8s.io/kafkaconnects.kafka.strimzi.io created\ncustomresourcedefinition.apiextensions.k8s.io/kafkamirrormakers.kafka.strimzi.io created\nkafka.kafka.strimzi.io/my-cluster created\n")])])]),e("p",[a._v("Run the following command to wait until kafka is ready, in may take few minutes (2 minutes on my laptop)")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("wait")]),a._v(" kafka/my-cluster --for"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("condition"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Ready --timeout"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("300s -n kafka\nkafka.kafka.strimzi.io/my-cluster condition met\n")])])]),e("h3",{attrs:{id:"test-using-kafka-console-producer-and-kafka-console-consumer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test-using-kafka-console-producer-and-kafka-console-consumer"}},[a._v("#")]),a._v(" Test using kafka-console-producer and kafka-console-consumer")]),a._v(" "),e("p",[a._v("Run this command to deploy a console producer, enter some texte and tape enter for each message, (Ctrl+C) to exit.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl -n kafka run kafka-producer -ti --image"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("strimzi/kafka:0.17.0-kafka-2.4.0 --rm"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true --restart"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Never -- bin/kafka-console-producer.sh --broker-list my-cluster-kafka-bootstrap:9092 --topic my-topic\n")])])]),e("p",[a._v("Run this command to deploy a console consumer, you should see messages sent using producer into previous step.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl -n kafka run kafka-consumer -ti --image"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("strimzi/kafka:0.17.0-kafka-2.4.0 --rm"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true --restart"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Never -- bin/kafka-console-consumer.sh --bootstrap-server my-cluster-kafka-bootstrap:9092 --topic my-topic --from-beginning\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);